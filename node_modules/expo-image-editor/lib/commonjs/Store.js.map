{"version":3,"sources":["Store.tsx"],"names":["imageDataState","key","default","uri","width","height","imageScaleFactorState","imageBoundsState","x","y","readyState","processingState","accumulatedPanState","cropSizeState","editingModeState","glContextState","glProgramState"],"mappings":";;;;;;;AAEA;;AAQO,MAAMA,cAAc,GAAG,kBAAgB;AAC5CC,EAAAA,GAAG,EAAE,gBADuC;AAE5CC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,EADE;AAEPC,IAAAA,KAAK,EAAE,CAFA;AAGPC,IAAAA,MAAM,EAAE;AAHD;AAFmC,CAAhB,CAAvB;;AASA,MAAMC,qBAAqB,GAAG,kBAAa;AAChDL,EAAAA,GAAG,EAAE,uBAD2C;AAEhDC,EAAAA,OAAO,EAAE;AAFuC,CAAb,CAA9B;;AAYA,MAAMK,gBAAgB,GAAG,kBAAkB;AAChDN,EAAAA,GAAG,EAAE,kBAD2C;AAEhDC,EAAAA,OAAO,EAAE;AACPM,IAAAA,CAAC,EAAE,CADI;AAEPC,IAAAA,CAAC,EAAE,CAFI;AAGPL,IAAAA,KAAK,EAAE,CAHA;AAIPC,IAAAA,MAAM,EAAE;AAJD;AAFuC,CAAlB,CAAzB;;AAUA,MAAMK,UAAU,GAAG,kBAAc;AACtCT,EAAAA,GAAG,EAAE,YADiC;AAEtCC,EAAAA,OAAO,EAAE;AAF6B,CAAd,CAAnB;;AAKA,MAAMS,eAAe,GAAG,kBAAc;AAC3CV,EAAAA,GAAG,EAAE,iBADsC;AAE3CC,EAAAA,OAAO,EAAE;AAFkC,CAAd,CAAxB;;AAUA,MAAMU,mBAAmB,GAAG,kBAAqB;AACtDX,EAAAA,GAAG,EAAE,qBADiD;AAEtDC,EAAAA,OAAO,EAAE;AACPM,IAAAA,CAAC,EAAE,CADI;AAEPC,IAAAA,CAAC,EAAE;AAFI;AAF6C,CAArB,CAA5B;;AAaA,MAAMI,aAAa,GAAG,kBAAsB;AACjDZ,EAAAA,GAAG,EAAE,eAD4C;AAEjDC,EAAAA,OAAO,EAAE;AACPE,IAAAA,KAAK,EAAE,CADA;AAEPC,IAAAA,MAAM,EAAE;AAFD;AAFwC,CAAtB,CAAtB;;AAUA,MAAMS,gBAAgB,GAAG,kBAAmB;AACjDb,EAAAA,GAAG,EAAE,kBAD4C;AAEjDC,EAAAA,OAAO,EAAE;AAFwC,CAAnB,CAAzB;;AAWA,MAAMa,cAAc,GAAG,kBAAsB;AAClDd,EAAAA,GAAG,EAAE,gBAD6C;AAElDC,EAAAA,OAAO,EAAE;AAFyC,CAAtB,CAAvB;;AAKA,MAAMc,cAAc,GAAG,kBAAkC;AAC9Df,EAAAA,GAAG,EAAE,gBADyD;AAE9DC,EAAAA,OAAO,EAAE;AAFqD,CAAlC,CAAvB","sourcesContent":["import { ExpoWebGLRenderingContext } from \"expo-gl\";\nimport { EditingOperations } from \"./index\";\nimport { atom } from \"recoil\";\n\nexport interface ImageData {\n  uri: string;\n  height: number;\n  width: number;\n}\n\nexport const imageDataState = atom<ImageData>({\n  key: \"imageDataState\",\n  default: {\n    uri: \"\",\n    width: 0,\n    height: 0,\n  },\n});\n\nexport const imageScaleFactorState = atom<number>({\n  key: \"imageScaleFactorState\",\n  default: 1,\n});\n\nexport interface ImageBounds {\n  x: number;\n  y: number;\n  height: number;\n  width: number;\n}\n\nexport const imageBoundsState = atom<ImageBounds>({\n  key: \"imageBoundsState\",\n  default: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  },\n});\n\nexport const readyState = atom<boolean>({\n  key: \"readyState\",\n  default: false,\n});\n\nexport const processingState = atom<boolean>({\n  key: \"processingState\",\n  default: false,\n});\n\nexport interface AccumulatedPan {\n  x: number;\n  y: number;\n}\n\nexport const accumulatedPanState = atom<AccumulatedPan>({\n  key: \"accumulatedPanState\",\n  default: {\n    x: 0,\n    y: 0,\n  },\n});\n\nexport interface ImageDimensions {\n  width: number;\n  height: number;\n}\n\nexport const cropSizeState = atom<ImageDimensions>({\n  key: \"cropSizeState\",\n  default: {\n    width: 0,\n    height: 0,\n  },\n});\n\nexport type EditingModes = \"operation-select\" | EditingOperations;\n\nexport const editingModeState = atom<EditingModes>({\n  key: \"editingModeState\",\n  default: \"operation-select\",\n});\n\ninterface GLContext {\n  gl: ExpoWebGLRenderingContext | null;\n  program: WebGLProgram;\n  verts: Float32Array;\n}\n\nexport const glContextState = atom<GLContext[\"gl\"]>({\n  key: \"glContextState\",\n  default: null,\n});\n\nexport const glProgramState = atom<GLContext[\"program\"] | null>({\n  key: \"glProgramState\",\n  default: null,\n});\n"]}